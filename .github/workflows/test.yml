on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
        target_cpu: [penryn, znver1, native]
        exclude:
          - os: macos-13
            target_cpu: penryn
          - os: macos-13
            target_cpu: znver1
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: "Set env"
        shell: bash
        run: |
          if [ ${{ matrix.target_cpu }} = "native" ]; then
            echo "CARGO_EXTRA_ARGS='--features native-optimizations" >> $GITHUB_ENV
          fi
      - uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-C target-cpu=${{ matrix.target_cpu }}"
        with:
          command: test
          args: "${{ env.CARGO_EXTRA_ARGS }}"

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
